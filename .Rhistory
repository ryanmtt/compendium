na.rm = TRUE
) +ylim(c(0,60))
ggplot(data = subset_data3, mapping = aes(x = log(fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by fruit consumption in NHANES dataset"
) +
theme_bw()
ggplot(data = subset_data3, mapping = aes(x = (fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by fruit consumption in NHANES dataset"
) +
theme_bw()
ggplot(data = subset_data3, mapping = aes(x = log(fruit), y = log(BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by fruit consumption in NHANES dataset"
) +
theme_bw()
runApp('C:/Users/ryanm/Downloads')
runApp('C:/Users/ryanm/Downloads')
subset_data$predict <- predict(fitf)
ggplot(subset_data2, aes(fruit, BMXBMI)) +
geom_point() +
geom_line(aes(y = predict), color = "red")
# Basic Exploration:
data1 <- inner_join(BMI_RAW, DEMO_RAW, by = "SEQN")
data <- inner_join(data1, FFQ_RAW, by = "SEQN")
dim(data)
subset_data<-data[data$FFQ0016<12 & data$FFQ0017<12 & data$FFQ0018<12 & data$FFQ0019<12 & data$FFQ0020<12 & data$FFQ0022<12 & data$FFQ0027<12,]
subset_data <- subset_data %>%
filter(!is.na(!!sym("BMXBMI")))
vec=c(0,mean(c(1,6)),mean(c(7,11)),12,mean(c(24,36)),52,104,mean(c(156,208)),mean(c(260,312)),365,730)
l_mapping <- c('1' = "0", '2' = "3.5", '3' = "9",'4' = "12" ,'5' = "30",'6' = "52",'7' = "104",'8' = "182" ,'9' = "286",'10' = "365", '11' = "730")
subset_data <- subset(subset_data, select = -c(FFQ0021, FFQ0021A,FFQ0021B,FFQ0023,FFQ0023A,FFQ0023B,FFQ0024,FFQ0024A,FFQ0024B,FFQ0025,FFQ0025A,FFQ0025B,FFQ0026,FFQ0026A,FFQ0026B))
which(colnames(subset_data) == "FFQ0016")
which(colnames(subset_data) == "FFQ0027")
col_to_revalue=colnames(subset_data[,77:83])
for(i in 77:83)
{
subset_data[,i]=as.factor(subset_data[,i])
}
subset_data <- subset_data %>% mutate_at(vars(col_to_revalue), funs(revalue(., l_mapping)))
subset_data <- subset_data %>%
mutate(across(all_of(col_to_revalue), as.numeric))
for(i in 77:83)
{
subset_data[,i]=as.numeric(gsub("\"", "", as.character(subset_data[,i])))
}
subset_data$fruit <- rowSums(subset_data[,c(col_to_revalue)])
subset_data$fruit <- subset(subset_data,fruit>0)
subset_data$BMXBMI
min(subset_data$BMXBMI)
# Cleaning the data
library("tidyverse")
library(plyr)
library(dplyr)
library("medicaldata")
setwd("//wsl.localhost/Ubuntu/home/AHDS_assessment2_2478688")
INPUT_FILE_BMI <- "raw/BMI.csv"
INPUT_FILE_DEMO <- "raw/DEMO_D.csv"
INPUT_FILE_FFQ <- "raw/FFQRAW_D.csv"
# check files exist:
data_dir_exists = fs::dir_exists("raw")
data_file_exists1 = fs::file_exists(INPUT_FILE_BMI)
data_file_exists2 = fs::file_exists(INPUT_FILE_DEMO)
data_file_exists3 = fs::file_exists(INPUT_FILE_FFQ)
print(glue::glue("Current working directory: {getwd()}"))
print(glue::glue("{INPUT_FILE_BMI} exsits: {data_file_exists1}"))
print(glue::glue("{INPUT_FILE_DEMO} exsits: {data_file_exists2}"))
print(glue::glue("{INPUT_FILE_FFQ} exsits: {data_file_exists3}"))
# load the dataset into R:
BMI_RAW <- read.csv(INPUT_FILE_BMI)
DEMO_RAW <- read.csv(INPUT_FILE_DEMO)
FFQ_RAW <- read.csv(INPUT_FILE_FFQ)
glimpse(BMI_RAW)
glimpse(DEMO_RAW)
glimpse(FFQ_RAW)
# Basic Exploration:
data1 <- inner_join(BMI_RAW, DEMO_RAW, by = "SEQN")
data <- inner_join(data1, FFQ_RAW, by = "SEQN")
dim(data)
subset_data<-data[data$FFQ0016<12 & data$FFQ0017<12 & data$FFQ0018<12 & data$FFQ0019<12 & data$FFQ0020<12 & data$FFQ0022<12 & data$FFQ0027<12,]
subset_data <- subset_data %>%
filter(!is.na(!!sym("BMXBMI")))
vec=c(0,mean(c(1,6)),mean(c(7,11)),12,mean(c(24,36)),52,104,mean(c(156,208)),mean(c(260,312)),365,730)
l_mapping <- c('1' = "0", '2' = "3.5", '3' = "9",'4' = "12" ,'5' = "30",'6' = "52",'7' = "104",'8' = "182" ,'9' = "286",'10' = "365", '11' = "730")
subset_data <- subset(subset_data, select = -c(FFQ0021, FFQ0021A,FFQ0021B,FFQ0023,FFQ0023A,FFQ0023B,FFQ0024,FFQ0024A,FFQ0024B,FFQ0025,FFQ0025A,FFQ0025B,FFQ0026,FFQ0026A,FFQ0026B))
which(colnames(subset_data) == "FFQ0016")
which(colnames(subset_data) == "FFQ0027")
col_to_revalue=colnames(subset_data[,77:83])
for(i in 77:83)
{
subset_data[,i]=as.factor(subset_data[,i])
}
subset_data <- subset_data %>% mutate_at(vars(col_to_revalue), funs(revalue(., l_mapping)))
subset_data <- subset_data %>%
mutate(across(all_of(col_to_revalue), as.numeric))
for(i in 77:83)
{
subset_data[,i]=as.numeric(gsub("\"", "", as.character(subset_data[,i])))
}
subset_data$fruit <- rowSums(subset_data[,c(col_to_revalue)])
subset_dataf <- subset(subset_data,fruit>0)
fitf=mfp(BMXBMI~fp(fruit,df=4,select=0.05),family=gaussian,data=subset_dataf,verbose=TRUE)
subset_dataf$predict <- predict(fitf)
ggplot(subset_dataf, aes(fruit, BMXBMI)) +
geom_point() +
geom_line(aes(y = predict), color = "red")
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = log(BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset"
) +
theme_bw()
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset"
) +
theme_bw()ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(0,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset"
) +theme_bw()
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(15,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset") +theme_bw()
ggplot(data = subset_dataf, mapping = aes(x = log(fruit), y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
) +ylim(c(10,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset") +theme_bw()
fitf=mfp(BMXBMI~fp(fruit,df=4,select=0.05),family=gaussian,data=subset_dataf,verbose=TRUE)
subset_dataf$predict <- predict(fitf)
ggplot(data = subset_dataf, mapping = aes(x = fruit, y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
)+ scale_x_continuous(trans = "log")+ylim(c(10,60))  +labs(
x = "Log(Yearly Fruit Consumption)",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset") +theme_bw()
log(500)
ggplot(data = subset_dataf, mapping = aes(x = fruit/52, y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
)+ scale_x_continuous(trans = "log")+ylim(c(10,60))  +labs(
x = "Weekly Fruit Consumption on log scale",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset") +theme_bw()
ggplot(data = subset_dataf, mapping = aes(x = fruit/52, y = BMXBMI)) +
geom_hex(na.rm = TRUE, bins = 70) +
scale_fill_distiller()+ geom_smooth(
method = "loess",
colour = "#F7DD70",
formula = "y~log(x)",
na.rm = TRUE
)+ scale_x_continuous(trans = "log")+ylim(c(10,60))  +labs(
x = "Weekly Fruit Consumption on the log scale",
y = "Body Mass Index (BMI)",
title = "Body Mass Index by Fruit Consumption in the NHANES dataset") +theme_bw()
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
boxplot(subset_data$fruit,subset_data$BMXBMI)
boxplot(subset_data$fruit,subset_data$bmi_cat
)
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subsetdata, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot with Categories of Third Variable",
x = "Category",
y = "Value") +
theme_minimal()
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot with Categories of Third Variable",
x = "Category",
y = "Value") +
theme_minimal()
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Yearly fruit consumption") +
theme_minimal()
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Yearly fruit consumption") +
theme_minimal()+ylim(c(0,2000))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Yearly fruit consumption") +
theme_minimal()+ylim(c(0,1000))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Yearly fruit consumption") +
theme_minimal()+ylim(c(0,1500))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit/52)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Weekly fruit consumption") +
theme_minimal()+ylim(c(0,1500))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit/52)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Weekly fruit consumption") +
theme_minimal()+ylim(c(0,100))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit/52)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Weekly fruit consumption") +
theme_minimal()+ylim(c(0,35))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit/52)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Weekly fruit consumption") +
theme_minimal()+ylim(c(0,30))
subset_data$bmi_cat <- cut(subset_data$BMXBMI, breaks = c(0,18.5,25,30,200), labels = c("Underweight", "Normal Weight", "Overweight","Obese"))
ggplot(subset_data, aes(x = bmi_cat, y = fruit/52)) +
geom_boxplot() +
labs(title = "Boxplot of fruit consumption by BMI category",
x = "BMI Category",
y = "Weekly fruit consumption") +
theme_minimal()+ylim(c(0,25))
subset_data %>% write_csv("clean/finaldata.csv")
subset_data %>% write_csv("clean/finaldata.csv")
# Cleaning the data
library("tidyverse")
library(plyr)
library(dplyr)
library("medicaldata")
setwd("//wsl.localhost/Ubuntu/home/AHDS_assessment2_2478688")
INPUT_FILE_BMI <- "raw/BMI.csv"
INPUT_FILE_DEMO <- "raw/DEMO_D.csv"
INPUT_FILE_FFQ <- "raw/FFQRAW_D.csv"
# check files exist:
data_dir_exists = fs::dir_exists("raw")
data_file_exists1 = fs::file_exists(INPUT_FILE_BMI)
data_file_exists2 = fs::file_exists(INPUT_FILE_DEMO)
data_file_exists3 = fs::file_exists(INPUT_FILE_FFQ)
print(glue::glue("Current working directory: {getwd()}"))
print(glue::glue("{INPUT_FILE_BMI} exsits: {data_file_exists1}"))
print(glue::glue("{INPUT_FILE_DEMO} exsits: {data_file_exists2}"))
print(glue::glue("{INPUT_FILE_FFQ} exsits: {data_file_exists3}"))
# load the dataset into R:
BMI_RAW <- read.csv(INPUT_FILE_BMI)
DEMO_RAW <- read.csv(INPUT_FILE_DEMO)
FFQ_RAW <- read.csv(INPUT_FILE_FFQ)
glimpse(BMI_RAW)
glimpse(DEMO_RAW)
glimpse(FFQ_RAW)
# Basic Exploration:
data1 <- inner_join(BMI_RAW, DEMO_RAW, by = "SEQN")
data <- inner_join(data1, FFQ_RAW, by = "SEQN")
dim(data)
# Transform the data further for analysis/ plotting:
# We decide to analyse the assocation between the amount of fruit
# consumed and BMI of individuals in the NHANES dataset
# and so clean and transform the data as so:
# we remove missing observations
subset_data<-data[data$FFQ0016<12 & data$FFQ0017<12 & data$FFQ0018<12 & data$FFQ0019<12 & data$FFQ0020<12 & data$FFQ0022<12 & data$FFQ0027<12,]
subset_data <- subset_data %>%
filter(!is.na(!!sym("BMXBMI")))
vec=c(0,mean(c(1,6)),mean(c(7,11)),12,mean(c(24,36)),52,104,mean(c(156,208)),mean(c(260,312)),365,730)
l_mapping <- c('1' = "0", '2' = "3.5", '3' = "9",'4' = "12" ,'5' = "30",'6' = "52",'7' = "104",'8' = "182" ,'9' = "286",'10' = "365", '11' = "730")
subset_data <- subset(subset_data, select = -c(FFQ0021, FFQ0021A,FFQ0021B,FFQ0023,FFQ0023A,FFQ0023B,FFQ0024,FFQ0024A,FFQ0024B,FFQ0025,FFQ0025A,FFQ0025B,FFQ0026,FFQ0026A,FFQ0026B))
which(colnames(subset_data) == "FFQ0016")
which(colnames(subset_data) == "FFQ0027")
col_to_revalue=colnames(subset_data[,77:83])
for(i in 77:83)
{
subset_data[,i]=as.factor(subset_data[,i])
}
subset_data <- subset_data %>% mutate_at(vars(col_to_revalue), funs(revalue(., l_mapping)))
subset_data <- subset_data %>%
mutate(across(all_of(col_to_revalue), as.numeric))
for(i in 77:83)
{
subset_data[,i]=as.numeric(gsub("\"", "", as.character(subset_data[,i])))
}
subset_data$fruit <- rowSums(subset_data[,c(col_to_revalue)])
subset(subset_data, select = -c(# col names of ones i want to remove)
# save this subset_dataf in the clean directory in compendium
subset_data %>% write_csv("clean/finaldata.csv")
q
# Cleaning the data
library("tidyverse")
library(plyr)
library(dplyr)
library("medicaldata")
setwd("//wsl.localhost/Ubuntu/home/AHDS_assessment2_2478688")
INPUT_FILE_BMI <- "raw/BMI.csv"
INPUT_FILE_DEMO <- "raw/DEMO_D.csv"
INPUT_FILE_FFQ <- "raw/FFQRAW_D.csv"
# check files exist:
data_dir_exists = fs::dir_exists("raw")
data_file_exists1 = fs::file_exists(INPUT_FILE_BMI)
data_file_exists2 = fs::file_exists(INPUT_FILE_DEMO)
data_file_exists3 = fs::file_exists(INPUT_FILE_FFQ)
print(glue::glue("Current working directory: {getwd()}"))
print(glue::glue("{INPUT_FILE_BMI} exsits: {data_file_exists1}"))
print(glue::glue("{INPUT_FILE_DEMO} exsits: {data_file_exists2}"))
print(glue::glue("{INPUT_FILE_FFQ} exsits: {data_file_exists3}"))
# load the dataset into R:
BMI_RAW <- read.csv(INPUT_FILE_BMI)
DEMO_RAW <- read.csv(INPUT_FILE_DEMO)
FFQ_RAW <- read.csv(INPUT_FILE_FFQ)
glimpse(BMI_RAW)
glimpse(DEMO_RAW)
glimpse(FFQ_RAW)
# Basic Exploration:
data1 <- inner_join(BMI_RAW, DEMO_RAW, by = "SEQN")
data <- inner_join(data1, FFQ_RAW, by = "SEQN")
dim(data)
# Transform the data further for analysis/ plotting:
# We decide to analyse the assocation between the amount of fruit
# consumed and BMI of individuals in the NHANES dataset
# and so clean and transform the data as so:
# we remove missing observations
subset_data<-data[data$FFQ0016<12 & data$FFQ0017<12 & data$FFQ0018<12 & data$FFQ0019<12 & data$FFQ0020<12 & data$FFQ0022<12 & data$FFQ0027<12,]
subset_data <- subset_data %>%
filter(!is.na(!!sym("BMXBMI")))
vec=c(0,mean(c(1,6)),mean(c(7,11)),12,mean(c(24,36)),52,104,mean(c(156,208)),mean(c(260,312)),365,730)
l_mapping <- c('1' = "0", '2' = "3.5", '3' = "9",'4' = "12" ,'5' = "30",'6' = "52",'7' = "104",'8' = "182" ,'9' = "286",'10' = "365", '11' = "730")
subset_data <- subset(subset_data, select = -c(FFQ0021, FFQ0021A,FFQ0021B,FFQ0023,FFQ0023A,FFQ0023B,FFQ0024,FFQ0024A,FFQ0024B,FFQ0025,FFQ0025A,FFQ0025B,FFQ0026,FFQ0026A,FFQ0026B))
which(colnames(subset_data) == "FFQ0016")
which(colnames(subset_data) == "FFQ0027")
col_to_revalue=colnames(subset_data[,77:83])
for(i in 77:83)
{
subset_data[,i]=as.factor(subset_data[,i])
}
subset_data <- subset_data %>% mutate_at(vars(col_to_revalue), funs(revalue(., l_mapping)))
subset_data <- subset_data %>%
mutate(across(all_of(col_to_revalue), as.numeric))
for(i in 77:83)
{
subset_data[,i]=as.numeric(gsub("\"", "", as.character(subset_data[,i])))
}
subset_data$fruit <- rowSums(subset_data[,c(col_to_revalue)])
# subset(subset_data, select = -c(# col names of ones i want to remove)
# save this subset_dataf in the clean directory in compendium
subset_data %>% write_csv("clean/finaldata.csv")
subset_data <- read.csv("clean/finaldata.csv")
setwd("//wsl.localhost/Ubuntu/home/AHDS_assessment2_2478688/code")
subset_data <- read.csv("clean/finaldata.csv")
subset_data <- read.csv("..clean/finaldata.csv")
subset_data <- read.csv("../clean/finaldata.csv")
subset_data
INPUT_FILE_BMI <- "../raw/BMI.csv"
INPUT_FILE_DEMO <- "../raw/DEMO_D.csv"
INPUT_FILE_FFQ <- "../raw/FFQRAW_D.csv"
# check files exist:
data_dir_exists = fs::dir_exists("raw")
data_file_exists1 = fs::file_exists(INPUT_FILE_BMI)
data_file_exists2 = fs::file_exists(INPUT_FILE_DEMO)
data_file_exists3 = fs::file_exists(INPUT_FILE_FFQ)
print(glue::glue("Current working directory: {getwd()}"))
print(glue::glue("{INPUT_FILE_BMI} exsits: {data_file_exists1}"))
print(glue::glue("{INPUT_FILE_DEMO} exsits: {data_file_exists2}"))
print(glue::glue("{INPUT_FILE_FFQ} exsits: {data_file_exists3}"))
# load the dataset into R:
BMI_RAW <- read.csv(INPUT_FILE_BMI)
DEMO_RAW <- read.csv(INPUT_FILE_DEMO)
FFQ_RAW <- read.csv(INPUT_FILE_FFQ)
setwd("//wsl.localhost/Ubuntu/home/AHDS_assessment2_2478688")
library(plyr)
BMI_RAW <- read.csv("raw/BMI.csv"
)
View(BMI_RAW)
remove.packages("plyr")
INPUT_FILE_BMI <- "raw/BMI.csv"
INPUT_FILE_DEMO <- "raw/DEMO_D.csv"
INPUT_FILE_FFQ <- "raw/FFQRAW_D.csv"
# check files exist:
data_dir_exists = fs::dir_exists("raw")
data_file_exists1 = fs::file_exists(INPUT_FILE_BMI)
data_file_exists2 = fs::file_exists(INPUT_FILE_DEMO)
data_file_exists3 = fs::file_exists(INPUT_FILE_FFQ)
print(glue::glue("Current working directory: {getwd()}"))
print(glue::glue("{INPUT_FILE_BMI} exsits: {data_file_exists1}"))
print(glue::glue("{INPUT_FILE_DEMO} exsits: {data_file_exists2}"))
print(glue::glue("{INPUT_FILE_FFQ} exsits: {data_file_exists3}"))
# load the dataset into R:
BMI_RAW <- read.csv(INPUT_FILE_BMI)
DEMO_RAW <- read.csv(INPUT_FILE_DEMO)
FFQ_RAW <- read.csv(INPUT_FILE_FFQ)
glimpse(BMI_RAW)
glimpse(DEMO_RAW)
glimpse(FFQ_RAW)
# Basic Exploration:
data1 <- inner_join(BMI_RAW, DEMO_RAW, by = "SEQN")
data <- inner_join(data1, FFQ_RAW, by = "SEQN")
dim(data)
# Transform the data further for analysis/ plotting:
# We decide to analyse the assocation between the amount of fruit
# consumed and BMI of individuals in the NHANES dataset
# and so clean and transform the data as so:
# we remove missing observations
subset_data<-data[data$FFQ0016<12 & data$FFQ0017<12 & data$FFQ0018<12 & data$FFQ0019<12 & data$FFQ0020<12 & data$FFQ0022<12 & data$FFQ0027<12,]
subset_data <- subset_data %>%
filter(!is.na(!!sym("BMXBMI")))
vec=c(0,mean(c(1,6)),mean(c(7,11)),12,mean(c(24,36)),52,104,mean(c(156,208)),mean(c(260,312)),365,730)
l_mapping <- c('1' = "0", '2' = "3.5", '3' = "9",'4' = "12" ,'5' = "30",'6' = "52",'7' = "104",'8' = "182" ,'9' = "286",'10' = "365", '11' = "730")
subset_data <- subset(subset_data, select = -c(FFQ0021, FFQ0021A,FFQ0021B,FFQ0023,FFQ0023A,FFQ0023B,FFQ0024,FFQ0024A,FFQ0024B,FFQ0025,FFQ0025A,FFQ0025B,FFQ0026,FFQ0026A,FFQ0026B))
which(colnames(subset_data) == "FFQ0016")
which(colnames(subset_data) == "FFQ0027")
col_to_revalue=colnames(subset_data[,77:83])
for(i in 77:83)
{
subset_data[,i]=as.factor(subset_data[,i])
}
subset_data <- subset_data %>% mutate_at(vars(col_to_revalue), funs(revalue(., l_mapping)))
subset_data <- subset_data %>%
mutate(across(all_of(col_to_revalue), as.numeric))
for(i in 77:83)
{
subset_data[,i]=as.numeric(gsub("\"", "", as.character(subset_data[,i])))
}
subset_data$fruit <- rowSums(subset_data[,c(col_to_revalue)])
# subset(subset_data, select = -c(# col names of ones i want to remove)
# save this subset_dataf in the clean directory in compendium
subset_data %>% write_csv("clean/finaldata.csv")
library(plyr)
remove.packages("plyr")
remove.packages(plyr
)
